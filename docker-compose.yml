version: '3'
services:
  competency-client:
    container_name: competency-front
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    build:
      context: ./client/
      dockerfile: Dockerfile
    volumes:
      - ./client/:/app/client:cached
      - ./shared/:/app/shared
      - '/app/client/node_modules'
    environment:
      API_URL: ${API_URL}
      BASE_URL: ${BASE_URL}
    restart: unless-stopped
    networks:
      - postgres

  competency-server:
    container_name: competency-server
    ports:
      -  ${API_PORT}:${API_PORT}
    image: nestjs-api-dev:1.0.0
    build:
      context: ./server/
      dockerfile: Dockerfile
    volumes:
      - ./server/:/app/server:cached
      - ./shared/:/app/shared
      - '/app/server/node_modules'
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      PORT: ${API_PORT}
      SECRET: ${SECRET}
    restart: unless-stopped
    networks:
      - postgres

  competency-db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_DB: $DB_DATABASE
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ~/db/${DB_DATABASE}:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    networks:
      - postgres

networks:
  postgres:
    driver: bridge


